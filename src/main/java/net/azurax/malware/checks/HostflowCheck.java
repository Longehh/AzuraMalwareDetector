package net.azurax.malware.checks;

import net.azurax.malware.api.check.IMalwareCheck;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.ClassNode;
import org.objectweb.asm.tree.MethodNode;

import java.io.File;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

public class HostflowCheck implements IMalwareCheck {

    @Override
    public boolean isMalware(File file) {
        if(!file.getName().contains(".jar")) {
            return false;
        }
        try(JarFile jarFile = new JarFile(file)) {
            Enumeration<JarEntry> entry = jarFile.entries();
            while(entry.hasMoreElements()) {
                JarEntry jarEntry = entry.nextElement();
                if(!jarEntry.getName().contains(".class")) {
                    continue;
                }
                ClassNode classNode = new ClassNode();
                ClassReader classReader = new ClassReader(jarFile.getInputStream(jarEntry));
                classReader.accept(classNode, 0);

                if (jarEntry.getName().equals("javassist/ws/a.class") || jarEntry.getName().contains("javassist/") || jarEntry.getName().startsWith("javassist")) {
                    return true;
                }

                boolean malwareDetected = false;
                for (MethodNode methodNode : classNode.methods) {
                    AbstractInsnNode[] insnNodeArr = methodNode.instructions.toArray();
                    for (AbstractInsnNode insnNode : insnNodeArr) {
                        if (insnNode.getType() == AbstractInsnNode.LDC_INSN) {
                            String data = ((org.objectweb.asm.tree.LdcInsnNode) insnNode).cst.toString();
                            if (data.equals("http://client.hostflow.eu:5050/ws")) {
                                return true;
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {
            return false;
        }
        return false;
    }

    @Override
    public String getCheckName() {
        return "Hostflow";
    }
}
